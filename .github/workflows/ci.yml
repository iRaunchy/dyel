name: Pre-merge

on:
  pull_request:
    branches: [ main ]

jobs:
  backend:
    runs-on: ubuntu-latest

    steps:
      # 1) Check out your code
      - uses: actions/checkout@v4

      # 2) Install Docker and spin up Postgres with secrets
      - name: Start Postgres
        run: |
          docker run -d \
            --name ci-postgres \
            -e POSTGRES_USER='${{ secrets.POSTGRES_USER }}' \
            -e POSTGRES_PASSWORD='${{ secrets.POSTGRES_PASSWORD }}' \
            -e POSTGRES_DB='${{ secrets.POSTGRES_DB }}' \
            -p 5432:5432 \
            postgres:15

      # 3) Wait for Postgres to be ready
      - name: Wait for Postgres
        run: |
          until pg_isready -h localhost -p 5432 \
            -U "${{ secrets.POSTGRES_USER }}" \
            -d "${{ secrets.POSTGRES_DB }}"; do
            echo "Waiting for Postgres..."
            sleep 2
          done

      # 4) Set up Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      # 5) Cache Go modules
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('backend/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # 6) Run vet & tests
      - name: Vet & Test
        working-directory: backend
        env:
          DATABASE_URL: |
            postgres://${{ secrets.POSTGRES_USER }}:
            ${{ secrets.POSTGRES_PASSWORD }}@
            localhost:5432/${{ secrets.POSTGRES_DB }}?sslmode=disable
          PORT: 8080
        run: |
          go vet ./...
          go test ./... -timeout 60s -v

      # 7) (Optional) Tear down Postgres
      - name: Stop Postgres
        run: docker stop ci-postgres

  frontend:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Build
        run: npm run build